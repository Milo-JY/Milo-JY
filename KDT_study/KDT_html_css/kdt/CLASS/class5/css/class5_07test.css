.item1 {
    background-color: red;
}

.item2 {
    background-color: blue;
}

.item3 {
    background-color: green;
}

.flex div {
    color: white;
}

.flex {
    width: 500px;
    height: 200px;
    border: 1px solid;
    display: flex;
}

/* ================= */
/* 
    1. flex-basis 

    1) 주축의 너비 값
    2) 최우선 적용.
*/


.container1 .item1 {
    flex-basis: auto;
}

.container1 .item2 {
    flex-basis: 100px;
    height: 300px;
}
/* height 는 입력 가능 (단, 오버플로우) */

.container1 .item3 {
    flex-basis: 50%;
}

/* =========================== */
/* 
    2.flex-gow 
    
    1) 주축을 배치 하고 남는 공간을 할당하는 비율.
    2) 아이템 내에 컨텐츠가 있으면 지정한 비율과 다름 주의.
    3) 제외 항목 : basis 값 + 컨텐츠 크기(텍스트)
*/

.container2 .item1 {
    flex-grow: 3;
}

.container2 .item2 {
    flex-grow: 2;
}

.container2 .item3 {
    flex-grow: 1;
}

/* =========================== */
/* 
    3. flex-shrink
    
    1) overflow 시, 상대적 줄어드는 비율 지정.
    2) 값이 클수록 줄어드는 비율이 높아짐.(비율이기 때문)
*/

.container3 div {
    flex-basis: 300px;
}

.container3 .item1 {
    flex-shrink: 1;
}

.container3 .item2 {
    flex-shrink: 2;
}

.container3 .item3 {
    flex-shrink: 3;
}

.container4 div {
    flex-basis: 100px;
}

.container4 .item1 {
    flex-grow: 1;
}

.container4 .item2 {
    flex-grow: 1;
}

.container4 .item3 {
    flex-grow: 1;
}

.container4:hover {
    width: 200px;
}

.container4:hover .item1 {
    flex-shrink: 3;
}

.container4:hover .item2 {
    flex-shrink: 2;
}
.container4:hover .item3 {
    flex-shrink: 1;
}




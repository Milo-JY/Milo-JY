package com.jjy.test;

public class Main {
	static int firstNum = 0;
	
//	Car 타입 클래스는 로컬 이너 클래스.
//	Car a=new Car();		// 지역 변수 특성을 갖는 로컬 이너 클래스는 10행의 main메서드 블럭 내에 
							// 선언되었으므로 main블럭 내로 통용 범위가 제한되어 외부에서 호출 불가.
	
	public static void main(String[] args) {
		int secondNum=1;
//		Car b=new Car();	// 지역 변수 특성을 갖는 로컬 이너 클래스는 선언(14행) 이후에나 클래스 타입 사용 가능.
		
		class Car{			// <로컬이너클래스> : 선언한 메서드 내에서만 통용되는 지역 변수와 같은 특성을 갖는 클래스.
							// 클래스 선언 후 객체 생성 가능. 14행 선언 후 26행처럼 객체 생성 가능.
							// 내부적으로 주 클래스의 모든 멤버를 직접 참조 가능. But, 메서드 외부에서는 지역 변수 특성을 갖는 
							// 로컬 이너 클래스에 대한 생성 및 참조 불가.(이너 클래스는 메서드 내부에서만 사용이 제한되므로 내부 사용 목적으로 활용.)
							// 일반적인 클래스와 마찬가지로 상속 및 재정의가 모두 가능하다.
			
			void printCarNum() {
				// 로컬 이너 클래스는 메서드 내 지역변수와 동등한 자격이 주어지므로 메서드 블럭 내 지역 변수 뿐만 아니라 주 클래스의 모든 멤버 필드에 직접 접근 가능.
				System.out.println("차량번호 : " + firstNum + secondNum);
			}
		}
		
		Car avante=new Car();
		
		avante.printCarNum();	// 로컬 이너 클래스 또한 메서드 내부에 선언된 하나의 독립적인 타입이므로 로컬 이너 클래스가 선언된 메서드 내부여도,
								// 로컬 이너 클래스 밖이면 직접 접근이 불가하며 26행과 같이 객체를 생성한 후에야 접근 가능.
	}
}